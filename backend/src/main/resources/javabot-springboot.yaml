apiVersion: v1
kind: Service
metadata:
  name: javabot-springboot-service
  annotations:
    oci.oraclecloud.com/loadbalancer-policy: "IP_HASH"
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local

  # This is the port that the service will listen on
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  # This is the selector that will be used to route the traffic to the backend service
  selector:
    app: javabot-springboot
---
# This is the service that will be used to route the traffic to the backend service
apiVersion: v1
kind: Service
metadata:
  name: javabot-backend-router
spec:
  selector:
    app: javabot-springboot
  ports:
    - protocol: TCP
      port: 80
      targetPort: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: javabot-springboot-deployment
spec:
  selector:
    matchLabels:
      app: javabot-springboot
  # Replicas help to scale the application
  replicas: 2
  template:
    metadata:
      labels:
        app: javabot-springboot
        version: v1
    spec:
      containers:
        - name: javabot-springboot
          image: %DOCKER_REGISTRY%/javabot-springboot:0.1
          imagePullPolicy: Always
          env:
          # Database connection properties
            - name: db_user
              value: "ADMIN"
            - name: db_url
              value: "jdbc:oracle:thin:@%TODO_PDB_NAME%_tp?TNS_ADMIN=/talentpentagon/creds"
            
            # Table names
            - name: task.table.name
              value: "task"
            - name: staff.table.name
              value: "staff"
            - name: team.table.name
              value: "team"

            # Drivers required for the application
            - name: driver_class_name
              value: "oracle.jdbc.OracleDriver"
            - name: OCI_REGION
              value: "%OCI_REGION%"
            - name: dbpassword
              valueFrom:
                secretKeyRef:
                  name: dbuser
                  key: dbpassword
                  optional: true
            - name: ui_username
              value: "%UI_USERNAME%"
            - name: ui_password
              valueFrom:
                secretKeyRef:
                  name: frontendadmin
                  key: password
                  optional: true
          # Location of the database wallet
          volumeMounts:
            - name: creds
              mountPath: /talentpentagon/creds
          ports:
            - containerPort: 8080
      restartPolicy: Always
      # Volumes that will be mounted to the container
      volumes:
        - name: creds
          secret:
            secretName: db-wallet-secret
      # This is the node selector that will be used to schedule the pods
      
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: javabot-springboot
---